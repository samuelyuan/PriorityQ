@model IEnumerable<Priority_Q.Models.Table>

@{
    ViewBag.Title = "Assign Table";
    var restaurant = ViewData["Restaurant"] as Priority_Q.Models.Restaurant;
    var customer = ViewData["ReadyCustomer"] as Priority_Q.Models.Customer;
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title" id="myModalLabel">Assign Table</h4>
</div>

<div class="modal-body">

    <h4>Customer "@customer.Name", Party of @customer.GroupCapacity</h4>

    @{
        //Initialize empty layout
        var length = 5;
        int[][] mapLayout = new int[length][];

        for (int i = 0; i < length; i++)
        {
            mapLayout[i] = new int[length];
        }

        //Fill in the tables
        foreach (var item in Model)
        {
            if ((item.CoordRow - ViewBag.RowOffset >= 0) && (item.CoordRow - ViewBag.RowOffset < length)
            && (item.CoordCol - ViewBag.ColOffset >= 0) && (item.CoordCol - ViewBag.ColOffset < length))
            {
                mapLayout[item.CoordRow - ViewBag.RowOffset][item.CoordCol - ViewBag.ColOffset] = item.ID;
            }
        }
    }

    <!-- The table layout is supposed to match the actual layout of a restaurant-->
    <table class="table table-striped table-hover ">
        @{
            for (var r = 0; r < length; r++)
            {
                <tr>
                    @for (var c = 0; c < length; c++)
                    {
                        
                            if (mapLayout[r][c] == 0)
                            {
                                <td>
                                    <span class="btn btn-info disabled" style="background: transparent;">
                                        &emsp; &emsp; &emsp; &emsp;
                                    </span>
                                </td>
                            }
                            else
                            {
                                var item = (new Priority_Q.Models.TableDBContext()).Tables.Find(mapLayout[r][c]);
                                if (!item.IsOccupied)
                                {
                                    if (item.MaxCapacity >= customer.GroupCapacity)
                                    {
                                    <td>
                                        <a class="btn btn-success" href="@String.Format("../../Restaurants/AssignTable/?tableID={0}&customerID={1}", item.ID, customer.ID)">
                                            [Max: @item.MaxCapacity <span class="glyphicon glyphicon-user"></span>]
                                        </a>
                                    </td>
                                    }
                                    else
                                    {
                                        <td>
                                            <span class="btn btn-default disabled" href="@String.Format("../../Restaurants/AssignTable/?tableID={0}&customerID={1}", item.ID, customer.ID)">
                                                [Max: @item.MaxCapacity <span class="glyphicon glyphicon-user"></span>]
                                            </span>
                                        </td>
                                    }
                                }
                                else
                                {
                                    <td>
                                        <span class="btn btn-danger disabled" href="@String.Format("../../Restaurants/AssignTable/?tableID={0}&customerID={1}", item.ID, customer.ID)">
                                            [Max: @item.MaxCapacity <span class="glyphicon glyphicon-user"></span>]
                                        </span>
                                    </td>
                                }
                            }
                    }
                </tr>
            }
        }
    </table>
</div>

@{
    var deleteCustomerModal = "deleteCustomer" + customer.ID;
}

<div class="modal fade" id="@deleteCustomerModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @Html.Partial("~/Views/Customers/_Delete.cshtml", customer)
        </div>
    </div>
</div>


<div class="modal-footer">
     <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#@deleteCustomerModal">
        Remove Only
    </button>
 
   <a class="btn btn-warning" href="@String.Format("../../Restaurants/ViewTables/{0}", restaurant.ID)">
        Cancel
    </a>
</div>
