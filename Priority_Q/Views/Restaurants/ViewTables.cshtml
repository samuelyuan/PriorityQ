@model Tuple<IEnumerable<Priority_Q.Models.Table>, IEnumerable<Priority_Q.Models.Customer>>

@{
    ViewBag.Title = "View Tables";
}

<h2>Restaurant: @ViewBag.RestaurantName</h2>

<!-- Display news -->
@if (ViewBag.MostRecentNews == "")
{
    <div class="panel panel-default">
        <div class="panel-body">
            No News
        </div>
    </div>
}
else
{
    <div class="panel panel-default">
        <div class="panel-body">
            @ViewBag.MostRecentNews <br />
            <i>Posted On @ViewBag.MostRecentDate</i> <br />
            <a class="btn btn-info" href='@string.Format("/Restaurants/ViewNews/{0}", ViewBag.RestaurantId)'>
                View All News
            </a>
            @if (Request.IsAuthenticated && ViewBag.OwnsRestaurant)
            {
                <a class="btn btn-warning" href='@string.Format("/NewsInfos/Create/{0}", ViewBag.RestaurantId)'>
                    Update News
                </a>
            }
        </div>
    </div>
}


<!-- Create two columns: Empty and Occupied tables -->
<div class="col-xs-6">
    <h3>
        Tables Available
        <span class="label label-default">
            @ViewBag.AvailableTablesCount
        </span>
    </h3>
    <p>
        @if (Request.IsAuthenticated && ViewBag.OwnsRestaurant)
        {
            <a class="btn btn-warning" href='@string.Format("/Restaurants/ManageTables/{0}", ViewBag.RestaurantId)'>
                Manage Tables
            </a>
        }
    </p>

    <!-- The data passed in is a list of tables for a restaurant -->
    <!-- Empty -->
    <div class="col-xs-3">
        <table class="table table-striped table-hover ">
            <!-- contents -->
            @{
                var counter = 1;
            }
            <h4>Empty</h4>
            @foreach (var item in Model.Item1)
            {
                if (Request.IsAuthenticated && ViewBag.OwnsRestaurant)
                {
                    <tr>
                        <td>
                            <!-- display clickable button for empty -->
                            @if (!item.IsOccupied)
                            {
                                <a class="btn btn-success" href='@string.Format("/Tables/ToggleOccupied/{0}", item.ID)'>
                                    #@Html.DisplayFor(modelItem => counter) --- [Max: @Html.DisplayFor(modelItem => item.MaxCapacity)]
                                </a>
                            }
                            else
                            {
                                //display disabled button for occupied
                                <span class="btn btn-default disabled">
                                    #@Html.DisplayFor(modelItem => counter) --- [Max: @Html.DisplayFor(modelItem => item.MaxCapacity)]
                                </span>
                            }
                        </td>
                    </tr>
                }
                else
                {
                    //just display disabled button for empty
                    if (!item.IsOccupied)
                    {
                        <tr>
                            <td>
                                <span class="btn btn-success disabled">
                                    #@Html.DisplayFor(modelItem => counter) --- [Max: @Html.DisplayFor(modelItem => item.MaxCapacity)]
                                </span>
                            </td>
                        </tr>
                    }
                }

                counter++;
            }
        </table>
    </div>

    <!-- Occupied -->
    <div class="col-xs-3">
        <table class="table table-striped table-hover ">
            <!-- contents -->
            @{
                counter = 1;
            }
            <h4>Occupied</h4>
            @foreach (var item in Model.Item1)
            {
                if (Request.IsAuthenticated && ViewBag.OwnsRestaurant)
                {
                    <tr>
                        <td>
                            <!-- display clickable button for occupied -->
                            @if (item.IsOccupied)
                            {
                                <a class="btn btn-danger" href='@string.Format("/Tables/ToggleOccupied/{0}", item.ID)'>
                                    #@Html.DisplayFor(modelItem => counter) --- [Max: @Html.DisplayFor(modelItem => item.MaxCapacity)]
                                </a>
                            }
                            else
                            {
                                //display disabled button for empty
                                <span class="btn btn-default disabled">
                                    #@Html.DisplayFor(modelItem => counter) --- [Max: @Html.DisplayFor(modelItem => item.MaxCapacity)]
                                </span>
                            }
                        </td>
                    </tr>
                }
                else
                {
                    //just display disabled button for occupied
                    if (item.IsOccupied)
                    {
                        <tr>
                            <td>
                                <span class="btn btn-danger disabled">
                                    #@Html.DisplayFor(modelItem => counter) --- [Max: @Html.DisplayFor(modelItem => item.MaxCapacity)]
                                </span>
                            </td>
                        </tr>
                    }
                }

                counter++;
            }
        </table>
    </div>
</div>

<!-- Manage Priority Queue -->
<div class="col-xs-6">
    <h3>
        Priority Queue
        <span class="label label-default">
            @ViewBag.NumCustomers
        </span>
    </h3>
    <p>
        @if (Request.IsAuthenticated && ViewBag.OwnsRestaurant)
        {
            <a class="btn btn-info" href='@string.Format("/Customers/Create/{0}", ViewBag.RestaurantId)'>
                Add Customer
            </a>
        }
    </p>
    <div class="col-xs-6">
        <table class="table table-striped table-hover ">
            <!-- contents -->
            @{
                counter = 1;
            }

            @foreach (var item in Model.Item2)
            {
                <tr>
                    <td>
                        @if (Request.IsAuthenticated && ViewBag.OwnsRestaurant)
                        {
                            <a class="btn btn-default" href='@string.Format("/Customers/AssignTable/{0}", item.ID)'>
                                #@Html.DisplayFor(modelItem => counter) -- @Html.DisplayFor(modelItem => item.Name) [@Html.DisplayFor(modelItem => item.GroupCapacity)]
                            </a>
                        }
                        else
                        {
                            <span class="btn btn-default disabled">
                                #@Html.DisplayFor(modelItem => counter) -- @Html.DisplayFor(modelItem => item.Name) [@Html.DisplayFor(modelItem => item.GroupCapacity)]
                            </span>
                        }
                    </td>
                </tr>

                        counter++;
            }
        </table>
    </div>
</div>
