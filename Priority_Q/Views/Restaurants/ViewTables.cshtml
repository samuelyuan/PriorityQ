@using System.Globalization;

@{
    ViewBag.Title = "View Tables";
    var restaurant = ViewData["Restaurant"] as Priority_Q.Models.Restaurant;
    var allTables = ViewData["AllTables"] as IEnumerable<Priority_Q.Models.Table>;
    var allCustomers = ViewData["AllCustomers"] as IEnumerable<Priority_Q.Models.Customer>;
    var mostRecentNews = ViewData["MostRecentNews"] as Priority_Q.Models.NewsInfo;
    var todayReservations = ViewData["TodayReservations"] as SortedDictionary<int, List<Priority_Q.Models.Reservation>>;
}

@functions {
    private String ConvertIntTo24Hour(int number)
    {
        String convertToString = number.ToString().PadLeft(2, '0');
        DateTime convertToDateTime = DateTime.ParseExact(convertToString, "HH", CultureInfo.CurrentCulture);
        return convertToDateTime.ToString("h:mm tt");
    }
}

<h2>@restaurant.Name</h2>

<span class="glyphicon glyphicon-map-marker"></span> @restaurant.StreetAddress , @restaurant.City &emsp; 
<span class="glyphicon glyphicon-time"></span> @ConvertIntTo24Hour(restaurant.OpeningHourStart) - @ConvertIntTo24Hour(restaurant.OpeningHourEnd)
<br />
<span class="glyphicon glyphicon-earphone"></span> @restaurant.PhoneNumber

<p></p>

<!-- Add Customer Modal -->
<div class="modal fade" id="addCustomerModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @{
                Priority_Q.Models.Customer newCustomer = new Priority_Q.Models.Customer();
                newCustomer.RestaurantID = restaurant.ID;
            }
            @Html.Partial("~/Views/Customers/_Create.cshtml", newCustomer);
        </div>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-body">
        <!-- Create two columns: Empty and Occupied tables -->
        <div class="col-xs-8">
            <h3>
                Tables Available
                <span class="label label-default">
                    @ViewBag.AvailableTablesCount
                </span>
                &nbsp;
                <a class="btn btn-warning" href='@string.Format("/Restaurants/ManageTables/{0}", restaurant.ID)' title="Manage Tables">
                    <span class="glyphicon glyphicon-cog"></span>
                </a>

                &emsp;

                <span>Reservations</span>
                <a class="btn btn-info" href='@string.Format("/Restaurants/ReserveTables/{0}", restaurant.ID)' title="Add Reservation">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                </a>
                <a class="btn btn-warning" href='@string.Format("/Restaurants/ViewReservations/{0}", restaurant.ID)' title="View All Reservations">
                    <span class="glyphicon glyphicon-cog" aria-hidden="true"></span>
                </a>
            </h3>

            <!-- Navigate the map -->
            <div class="row">
                <table>
                    <tr>
                        <td></td>
                        <td>
                            <a class="btn btn-info" href='@string.Format("/Restaurants/ViewTables/{0}?rowOffset={1}&&colOffset={2}",
            restaurant.ID, ViewBag.RowOffset - 1, ViewBag.ColOffset)'>
                                <span class="glyphicon glyphicon-arrow-up"></span>
                            </a>
                        </td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>
                            <a class="btn btn-info" href='@string.Format("/Restaurants/ViewTables/{0}?rowOffset={1}&&colOffset={2}",
            restaurant.ID, ViewBag.RowOffset, ViewBag.ColOffset - 1)'>
                                <span class="glyphicon glyphicon-arrow-left"></span>
                            </a>
                        </td>
                        <td>
                            <a class="btn btn-info" href='@string.Format("/Restaurants/ViewTables/{0}?rowOffset={1}&&colOffset={2}",
            restaurant.ID, ViewBag.RowOffset + 1, ViewBag.ColOffset)'>
                                <span class="glyphicon glyphicon-arrow-down"></span>
                            </a>
                        </td>
                        <td>
                            <a class="btn btn-info" href='@string.Format("/Restaurants/ViewTables/{0}?rowOffset={1}&&colOffset={2}",
            restaurant.ID, ViewBag.RowOffset, ViewBag.ColOffset + 1)'>
                                <span class="glyphicon glyphicon-arrow-right"></span>
                            </a>
                        </td>
                    </tr>
                </table>
            </div>
            <p></p>

            <!-- The data passed in is a list of tables for a restaurant -->
            <!-- List all empty tables -->
            @{
                //Initialize empty layout
                var length = 5;
                int[][] mapLayout = new int[length][];

                for (int i = 0; i < length; i++)
                {
                    mapLayout[i] = new int[length];
                }

                //Fill in the tables
                foreach (var item in allTables)
                {
                    if ((item.CoordRow - ViewBag.RowOffset >= 0) && (item.CoordRow - ViewBag.RowOffset < length)
            && (item.CoordCol - ViewBag.ColOffset >= 0) && (item.CoordCol - ViewBag.ColOffset < length))
                    {
                        mapLayout[item.CoordRow - ViewBag.RowOffset][item.CoordCol - ViewBag.ColOffset] = item.ID;
                    }
                }
            }

            <!-- The table layout is supposed to match the actual layout of a restaurant-->
            <table class="table table-striped table-hover ">
                @{
                    for (var r = 0; r < length; r++)
                    {
                        <tr>
                            @for (var c = 0; c < length; c++)
                            {
                                <td>
                                    @if (mapLayout[r][c] == 0)
                                    {
                                        <span class="btn btn-info disabled" style="background: transparent;">
                                            &emsp; &emsp; &emsp; &emsp;
                                        </span>
                                        continue;
                                    }

                                    @{
                                var currentTable = (new Priority_Q.Models.TableDBContext()).Tables.Find(mapLayout[r][c]);
                                    }

                                    <!-- Table info (#, max capacity) -->
                                    @if (!currentTable.IsOccupied)
                                    {
                                        <a class="btn btn-success" href='@string.Format("/Tables/ToggleOccupied/{0}", currentTable.ID)'>
                                            [Max: @currentTable.MaxCapacity <span class="glyphicon glyphicon-user"></span>]
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-danger" href='@string.Format("/Tables/ToggleOccupied/{0}", currentTable.ID)'>
                                            [Max: @currentTable.MaxCapacity <span class="glyphicon glyphicon-user"></span>]
                                        </a>
                                    }

                                    <br />

                                    <!-- Reservation Data-->
                                    <!-- don't display empty blocks -->
                                    @if (todayReservations[currentTable.ID].Count() > 0)
                                    {
                                        <span class="btn btn-default">
                                            @foreach (var reservation in todayReservations[currentTable.ID])
                                            {
                                                var manageReservationModal = "manageReservationModal" + reservation.ID;
                                                <button type="button" class="label label-warning" data-toggle="modal" data-target="#@manageReservationModal">
                                                    @{
                                                DateTime currentTime = new DateTime().AddHours(reservation.HourSlot).AddMinutes(reservation.MinuteSlot);
                                                    }
                                                    @currentTime.ToString("hh:mm tt", new CultureInfo("en-US"))
                                                </button>

                                                <div class="modal fade" id="@manageReservationModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                                                    <div class="modal-dialog" role="document">
                                                        <div class="modal-content">
                                                            @{
                                                Priority_Q.Models.Reservation currentReservation = (new Priority_Q.Models.ReservationDBContext()).Reservations.Find(reservation.ID);
                                                            }
                                                            @Html.Partial("~/Views/Reservations/_Manage.cshtml", currentReservation);
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="btn btn-default disabled">
                                            None
                                        </span>
                                    }
                                </td>
                            }
                        </tr>
                    }
                }
            </table>
        </div>

        <!-- Manage Priority Queue -->
        <div class="col-md-4">
            <h3>
                Priority Queue
                <span class="label label-default">
                    @allCustomers.Count()
                </span>
                &nbsp;
                <!-- Button trigger modal -->
                <button type="button" class="btn btn-info" data-toggle="modal" data-target="#addCustomerModal">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                </button>
            </h3>
            <hr />
            <div class="col-md-6">
                <table class="table table-striped table-hover ">
                    <!-- contents -->
                    @{
                        var counter = 1;
                    }
                    @foreach (var item in allCustomers)
                    {
                        <tr>
                            <td>
                                <span class="label label-default">#@counter</span>
                                <!-- Button trigger modal -->
                                @{
                        var nameAssignTableModal = "assignTableModal" + item.ID;
                                }
                                <button type="button" class="btn btn-default" data-toggle="modal" data-target="#@nameAssignTableModal">
                                    @item.GroupCapacity<span class="glyphicon glyphicon-user"></span> &emsp; @item.Name
                                </button>

                                <!-- Assign Table Modal -->
                                <div class="modal fade" id="@nameAssignTableModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            @{
                        Priority_Q.Models.Customer customer = (new Priority_Q.Models.CustomerDBContext()).Customers.Find(item.ID);
                        ViewData["ReadyCustomer"] = customer;
                        IEnumerable<Priority_Q.Models.Table> tables = (new Priority_Q.Models.TableDBContext()).Tables.Where(i => i.RestaurantId == restaurant.ID);
                                            }
                                            @Html.Partial("~/Views/Customers/_AssignTable.cshtml", tables)
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                        counter++;
                    }
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Display news -->
<h4>
    News
    &nbsp;
    <a class="btn btn-info" href='@string.Format("/NewsInfos/Create/{0}", restaurant.ID)'>
        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
    </a>
</h4>
<!-- Check if there's any news for today-->
@if (mostRecentNews == null)
{
    <span>No News</span>

    <br />
}
else
{
    @mostRecentNews.Content <br />
    <i>Posted On @mostRecentNews.Date</i>

    <br />

    <a class="btn btn-info" href='@string.Format("/Restaurants/ViewNews/{0}", restaurant.ID)'>
        &laquo; View All &raquo;
    </a>
}