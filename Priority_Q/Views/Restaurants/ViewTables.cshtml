@model IEnumerable<Priority_Q.Models.Table>

@{
    ViewBag.Title = "View Tables";
}

<h2>Tables</h2>
<h3>Restaurant: @ViewBag.RestaurantName</h3>
<h3>
    <span class="label label-default">
        Available: @ViewBag.AvailableTables / @ViewBag.TotalTables
    </span>
</h3>
<p>
    @if (Request.IsAuthenticated && ViewBag.OwnsRestaurant)
    {
        //create a new table just for that restaurant
        <a class="btn btn-info" href='@string.Format("/Tables/Create/{0}", ViewBag.RestaurantId)'>
            Add New Table
        </a>
    }
</p>

<!-- The data passed in is a list of tables for a restaurant -->
<table class="table">
    <!-- contents -->
    @{
        var counter = 1;
    }
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @if (!item.IsOccupied)
                {
                    <span class="label label-success">
                        #@Html.DisplayFor(modelItem => counter) --- [Max: @Html.DisplayFor(modelItem => item.MaxCapacity)]
                    </span>
                }
                else
                {
                    <span class="label label-danger">
                        #@Html.DisplayFor(modelItem => counter) --- [Max: @Html.DisplayFor(modelItem => item.MaxCapacity)]
                    </span>
                }
            </td>
            <td>
                @if (Request.IsAuthenticated && ViewBag.OwnsRestaurant)
                {
                     //only logged in users should be able to edit and delete
                    //best if only the user modifies their own restaurant and not someone else's
                    <a class="btn btn-warning" href='@string.Format("/Tables/Edit/{0}", item.ID)'> Edit </a>
                    <a class="btn btn-danger" href='@string.Format("/Tables/Delete/{0}", item.ID)'> Delete </a>
                }
            </td>
        </tr>
        counter++;
    }

</table>


