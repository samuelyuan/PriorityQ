@using System.Globalization;

@model IEnumerable<Priority_Q.Models.Table>

@{
    ViewBag.Title = "Reserve A Table";
    var allReservations = ViewData["AllReservations"] as List<IEnumerable<Priority_Q.Models.Reservation>>;
}

@functions {
    private String DisplayTableData(int counter, Priority_Q.Models.Table item)
    {
        return "#" + counter + " --- [Max: " + item.MaxCapacity + "]";
    }
}

<h2>Reserve a Table</h2>

<!-- Display group size -->
<!-- Display available time slots -->
@using (Html.BeginForm())
{
    <fieldset>
        @Html.DropDownList("GroupSizeList")
        @Html.DropDownList("DaySlotList")
        @Html.DropDownList("TimeSlotList")

        <input class="btn btn-info" type="submit" value="Find A Table" />
    </fieldset>
}

@if (ViewBag.GroupSize > 0)
{
    <!-- The data passed in is a list of tables for a restaurant -->
    <table class="table table-striped table-hover ">
        <!-- contents -->
        @{
            var counter = 1;
            var available = 0;
            var numPerRow = (int)Math.Truncate(Math.Sqrt(Model.Count()));
        }

        @foreach (var item in Model)
        {
            //too late to reserve (must be done at least an hour in advance)
            if (Math.Abs(DateTime.Parse(ViewBag.TimeSlot).Hour - ViewBag.CurrentHour) <= 1)
            {
                continue;
            }

            if (available % numPerRow == 0)
            {
                @:<tr>
            }

            //make sure table can seat enough customers
            if (item.MaxCapacity >= ViewBag.GroupSize)
            {
                <!-- check if table has been reserved -->
                var isReservedAlready = false;
                //for ( var reservationCounter = 0; reservationCounter < allReservations[counter - 1].Count(); reservationCounter++)
                foreach (var reservation in allReservations[counter - 1])
                {
                    var reservationTime = new DateTime().AddHours(reservation.HourSlot).AddMinutes(reservation.MinuteSlot);
                    var reservationDay = reservation.DaySlot;
                    if (ViewBag.TimeSlot.Equals(reservationTime.ToString("hh:mm tt", new CultureInfo("en-US"))) 
                        && ViewBag.DaySlot.Equals(reservationDay))
                    {
                        isReservedAlready = true;
                        break;
                    }
                }

                <td>
                    <span class="label label-default">#@counter</span> <br />
                    <!-- make sure table hasn't been reserved already -->
                    @if (!isReservedAlready)
                    {
                        var confirmModal = "confirmModal" + item.ID;
                        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#@confirmModal">
                            [Max: @item.MaxCapacity <span class="glyphicon glyphicon-user"></span>]
                        </button>

                        <div class="modal fade" id="@confirmModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    @{
                                        Priority_Q.Models.Reservation reservation = new Priority_Q.Models.Reservation();
                                        reservation.TableId = item.ID;
                                        reservation.DaySlot = ViewBag.DaySlot;
                                        reservation.HourSlot = DateTime.Parse(ViewBag.TimeSlot).Hour;
                                        reservation.MinuteSlot = DateTime.Parse(ViewBag.TimeSlot).Minute;
                                    }
                                    @Html.Partial("~/Views/Reservations/_Confirm.cshtml", reservation);
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <span>Already Reserved</span>
                    }
                </td>
            
                    available++;
            }

            counter++;

            if (available % numPerRow == 0)
            {
                @:</tr>
            }

        }

        @if (Math.Abs(DateTime.Parse(ViewBag.TimeSlot).Hour - ViewBag.CurrentHour) <= 1)
        {
            <tr>
                <td>
                    Tables must be reserved at least one hour in advance.
                </td>
            </tr>
        }

        <!-- Notify the user that there are no available tables -->
        @if (available == 0)
        {
            <tr>
                <td>
                    There are no tables matching this criteria
                </td>
            </tr>
        }
    </table>
}

<p>
    <a class="btn btn-warning" href="@String.Format("../../Restaurants/ViewTables/{0}", ViewBag.RestaurantId)">
        Cancel
    </a>
</p>