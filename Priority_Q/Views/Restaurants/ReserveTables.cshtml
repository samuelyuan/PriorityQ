@using System.Globalization;

@model IEnumerable<Priority_Q.Models.Table>

@{
    ViewBag.Title = "Reserve A Table";
    var allReservations = ViewData["AllReservations"] as List<IEnumerable<Priority_Q.Models.Reservation>>;
}

@functions {
    private String DisplayTableData(int counter, Priority_Q.Models.Table item)
    {
        return "#" + counter + " --- [Max: " + item.MaxCapacity + "]";
    }
}

<h2>Reserve a Table</h2>

<!-- Display group size -->
<!-- Display available time slots -->
@using (Html.BeginForm("ReserveTables", "Restaurants", FormMethod.Get))
{
    <fieldset>
        @Html.DropDownList("GroupSizeList")
        @Html.DropDownList("DaySlotList")
        @Html.DropDownList("TimeSlotList")

        <input class="btn btn-info" type="submit" value="Find A Table" />
    </fieldset>
}

@if (ViewBag.GroupSize > 0)
{
    <!-- The data passed in is a list of tables for a restaurant -->
    <table class="table table-striped table-hover ">
        <!-- contents -->
        @{
            var counter = 1;
            var available = 0;
            var numPerRow = (int)Math.Truncate(Math.Sqrt(Model.Count()));
        }

        @foreach (var item in Model)
        {

            if (available % numPerRow == 0)
            {
                @:<tr>
            }

            //make sure table can seat enough customers
            if (item.MaxCapacity >= ViewBag.GroupSize)
            {
                <!-- check if table has been reserved -->
                var isReservedAlready = false;
                //for ( var reservationCounter = 0; reservationCounter < allReservations[counter - 1].Count(); reservationCounter++)
                foreach (var reservation in allReservations[counter - 1])
                {
                    var reservationTime = reservation.TimeSlot;
                    var reservationDay = reservation.DaySlot;
                    if (reservationTime == ViewBag.TimeSlot && reservationDay == ViewBag.DaySlot)
                    {
                        isReservedAlready = true;
                        break;
                    }

                }

                //too late to reserve
                /*if (Math.Abs(ViewBag.TimeSlot - ViewBag.CurrentHour) <= 1)
                {
                    continue;
                }*/

                <td>
                    <span class="label label-default">#@counter</span> <br />
                    <!-- make sure table hasn't been reserved already -->
                    @if (!isReservedAlready)
                    {

                        <a class="btn btn-success"
                           href="@String.Format("../../Reservations/AssignTable/?tableID={0}&timeSlot={1}&daySlot={2}", item.ID, ViewBag.TimeSlot, ViewBag.DaySlot)">
                            [Max: @item.MaxCapacity <span class="glyphicon glyphicon-user"></span>]
                        </a>
                    }
                    else
                    {
                        <span>Already Reserved</span>
                    }
                </td>


                    available++;
            }

            counter++;

            if (available % numPerRow == 0)
            {
                @:</tr>
            }

        }

        <!-- Notify the user that there are no available tables -->
        @if (available == 0)
        {
            <tr>
                <td>
                    There are no tables matching this criteria
                </td>
            </tr>
        }
    </table>
}

<p>
    <a class="btn btn-warning" href="@String.Format("../../Restaurants/ViewTables/{0}", ViewBag.RestaurantId)">
        Cancel
    </a>
</p>