@using Microsoft.AspNet.Identity;
@using System;
@using System.Globalization;
@model IEnumerable<Priority_Q.Models.Restaurant>

@{
    ViewBag.Title = "All Restaurants";
    var AllTableCounts = ViewData["AllTableCounts"] as List<int>;
    var AllCustomerCounts = ViewData["AllCustomerCounts"] as List<int>;
}

@functions {
    bool IsRestaurantOpen(Priority_Q.Models.Restaurant item)
    {
        bool isOpen = false;
        if (ViewBag.CurrentHour >= item.OpeningHourStart) 
        {
            /*Two cases:
            if the opening and closing hour are both on the same day (10am - 10pm, which is 10:00 - 22:00)
                OR 
            if the closing hour is on the day after (10am - 3am, which is 10:00 - 03:00)
            */
            if ((item.OpeningHourStart < item.OpeningHourEnd && ViewBag.CurrentHour < item.OpeningHourEnd) ||
                (item.OpeningHourStart >= item.OpeningHourEnd && ViewBag.CurrentHour < item.OpeningHourEnd + 24))
            { 
                isOpen = true;
            }
            else
            {
                isOpen = false;
            }
        }
        else
        {
            isOpen = false;
        }

        return isOpen;
    }        
}

<header style="text-align: center; -webkit-background-size: cover; -moz-background-size: cover; background-size: cover; -o-background-size: cover;
background: url('../../Content/bg-all_restaurants.jpg') center center scroll;
    padding: 20px 0; margin-bottom: 30px;">
    <h1 class="text-center" style="color: white; text-shadow: 0px 0px 5px black;">
        <span class="glyphicon glyphicon-globe"></span> All Restaurants
    </h1>
    
</header>

@using (Html.BeginForm())
{
    <h4>
        Find by name or location: @Html.TextBox("SearchString")
        <input type="submit" value="Search" />
    </h4>
}

<table class="table table-striped table-hover ">
    @{
        var counter = 0;
    }

    @foreach (var item in Model)
    {
        <tr>
            <td>
            </td>
            <td>
                <p>
                    @if (Request.IsAuthenticated)
                    {
                        <h4>
                            <a href='@string.Format("/Restaurants/ViewTables/{0}", item.ID)'>
                                @Html.DisplayFor(modelItem => item.Name)
                            </a>
                        </h4>
                    }
                    else
                    {
                        <h4>
                            <a href='@string.Format("/Restaurants/CustomerView/{0}", item.ID)'>
                                @Html.DisplayFor(modelItem => item.Name)
                            </a>
                        </h4>
                    }
                </p>
                <p>
                    @if (IsRestaurantOpen(item))
                    {
                        <span class="label label-success">Open</span>
                    }
                    else
                    {
                        <span class="label label-danger">Closed</span>
                    }
                    <span class="glyphicon glyphicon-time"></span>
                    <!-- add zero to single digit numbers (3 -> 03), but leave it alone if it's double digit-->
                    @DateTime.ParseExact(item.OpeningHourStart.ToString().PadLeft(2, '0'), "HH", CultureInfo.CurrentCulture).ToString("h:mm tt")
                    -
                    @DateTime.ParseExact(item.OpeningHourEnd.ToString().PadLeft(2, '0'), "HH", CultureInfo.CurrentCulture).ToString("h:mm tt")
               
                </p>
                <p>
                    <span class="glyphicon glyphicon-map-marker"></span> @item.StreetAddress &emsp;
                    <span class="glyphicon glyphicon-earphone"></span> @item.PhoneNumber
                    <br />
                    @item.City <br />
                </p>
            </td>

            <td></td>

            <td>
                <!-- Button trigger modal -->
                @{
                    var previewModal = "previewModal" + item.ID;
                    var reserveModal = "reserveModal" + item.ID;
                }

                <h4>
                    @if (/*isOpen*/ true)
                    {
                        if (AllTableCounts[counter] > 0)
                        {
                            <span class="label label-success">No Wait</span>
                            <span class="label label-info">@AllTableCounts[counter] Open Tables</span>
                        }
                        else
                        {
                            <span class="label label-danger">Wait in Line</span>
                            <span class="label label-info">@AllCustomerCounts[counter] Groups Waiting</span>
                        }

                        
                        <button type="button" class="btn btn-info" data-toggle="modal" data-target="#@previewModal">
                            <span class="glyphicon glyphicon-eye-open"></span>Preview
                        </button>
                    }
                </h4>

                <button type="button" class="btn btn-info" data-toggle="modal" data-target="#@reserveModal">
                    <span class="glyphicon glyphicon-book"></span> Reserve
                </button>

                <!-- Modal -->
                <div class="modal fade" id="@previewModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <h4 class="modal-title" id="myModalLabel">Going To @item.Name</h4>
                            </div>
                            <div class="modal-body">
                                @if (AllTableCounts[counter] > 0)
                                {
                                    //show tables
                                    IEnumerable<Priority_Q.Models.Table> tables = (new Priority_Q.Models.TableDBContext()).Tables.Where(i => i.RestaurantId == item.ID);

                                    SortedDictionary<int, int> tableCapacityCount = new SortedDictionary<int, int>();
                                    foreach (var table in tables)
                                    {
                                        if (!table.IsOccupied)
                                        {
                                            if (!tableCapacityCount.ContainsKey(table.MaxCapacity))
                                            {
                                                tableCapacityCount.Add(table.MaxCapacity, 1); //initialize
                                            }
                                            else
                                            {
                                                tableCapacityCount[table.MaxCapacity]++; //add one
                                            }
                                        }
                                    }
                                    <p>
                                        There are currently <b>@AllTableCounts[counter]</b> open tables.
                                    </p>
                                    @Html.Partial("_CustomerPreviewTables", tableCapacityCount)
                                }
                                else
                                {
                                    //show priority queue
                                    var allCustomers = (new Priority_Q.Models.CustomerDBContext()).Customers.Where(i => i.RestaurantID == item.ID);
                                    <p>
                                        There are currently <b>@allCustomers.Count()</b> groups waiting.
                                    </p>
                                    @Html.Partial("_CustomerPriorityQueue", allCustomers)
                                }
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-warning" data-dismiss="modal">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Modal -->
                <div class="modal fade" id="@reserveModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <h4 class="modal-title" id="myModalLabel">Reservation for @item.Name</h4>
                            </div>
                            <div class="modal-body">
                                <p>
                                    Text <span class="glyphicon glyphicon-earphone"></span> @item.PhoneNumber the following:
                                    <ul>
                                        <li>
                                            Day 
                                            <select>
                                                <option value="-1">--- See All Available Days ---</option>
                                                @{
                                                    DateTime todaysDate = DateTime.Now;
                                                }
                                                @for (var i = 0; i < 14; i++)
                                                {
                                                    String currentDateDisplay = todaysDate.AddDays(i).ToString("MMM dd, yyyy");
                                                    String currentDateStored = todaysDate.AddDays(i).ToString("MM/dd/yyyy");
                                                    <option value="@currentDateStored">@currentDateDisplay</option>
                                                }
                                            </select>
                                        </li>
                                        <li>
                                            Time 
                                            <select>
                                                <option value="-1">--- See All Available Times ---</option>
                                                @for (var i = item.OpeningHourStart; i < item.OpeningHourEnd; i++)
                                                {
                                                    for (var minutes = 0; minutes < 60; minutes += 30)
                                                    {
                                                        var displayTime = (new DateTime()).AddHours(i).AddMinutes(minutes).ToString("h:mm tt");

                                                        <option value="@displayTime">@displayTime</option>
                                                    }
                                                }
                                            </select>
                                        </li>
                                        <li>Your Name (ex. John)</li>
                                        <li>Group Size
                                            <select>
                                                <option value="-1">--- Select Size ---</option>
                                                @for (var i = 1; i <= 20; i++)
                                                {
                                                    <option value="@i">@i</option>
                                                }
                                            </select>
                                        </li>
                                    </ul>
                                    You will get an immediate response telling you whether you succeeded or not. 
                                </p>
                                
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-warning" data-dismiss="modal">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>

            </td>

            <td>
                
            </td>
        </tr>
                counter++;
    }

</table>
