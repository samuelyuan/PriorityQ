@using System.Globalization;

@{
    ViewBag.Title = "View Full Map";
    var restaurant = ViewData["Restaurant"] as Priority_Q.Models.Restaurant;
    var allTables = ViewData["AllTables"] as IEnumerable<Priority_Q.Models.Table>;
    var tableCapacityCount = ViewData["TableCapacityCount"] as SortedDictionary<int, int>;
}

@functions {
    private String ConvertIntTo24Hour(int number)
    {
        String convertToString = number.ToString().PadLeft(2, '0');
        DateTime convertToDateTime = DateTime.ParseExact(convertToString, "HH", CultureInfo.CurrentCulture);
        return convertToDateTime.ToString("h:mm tt");
    }
}

<h2>@restaurant.Name</h2>

<!-- Basic restaurant info (location, opening hours, etc.)-->
<span class="glyphicon glyphicon-map-marker"></span> @restaurant.StreetAddress , @restaurant.City &emsp;
<span class="glyphicon glyphicon-time"></span> @ConvertIntTo24Hour(restaurant.OpeningHourStart) - @ConvertIntTo24Hour(restaurant.OpeningHourEnd)
<br />
<span class="glyphicon glyphicon-earphone"></span> @restaurant.PhoneNumber

<p></p>


<div class="panel panel-default">
    <div class="panel-body">
        <h3>
            Tables Available <span class="label label-default">@ViewBag.AvailableTablesCount / @allTables.Count()</span>
            &emsp;
            <a class="btn btn-info" href='@string.Format("/Restaurants/CustomerView/{0}", restaurant.ID)'>Return to Condensed Form</a>
        </h3>

        <!-- List all empty tables -->
        <table class="table table-striped table-hover ">
            <tr>
                <td>
                    @foreach (var pair in tableCapacityCount)
                    {
                        if (pair.Value > 1)
                        {
                            <span>@pair.Value tables</span>
                        }
                        else
                        {
                            <span>@pair.Value table</span>
                        }
                        <span class="btn btn-success disabled">
                            @pair.Key<span class="glyphicon glyphicon-user"></span>
                        </span>
                        <span>&emsp;</span>
                    }
                </td>
            </tr>

      </table>

            <table class="table table-striped table-hover ">
                <!-- contents -->
                @{
                    var counter = 1;
                    var numPerRow = (int)Math.Truncate(Math.Sqrt(allTables.Count()));
                }

                    @foreach (var item in allTables)
                    {
                        if (counter % numPerRow == 1)
                        {
                            @:<tr>
                    }

                    <td>
                        <span class="label label-default">#@counter</span> <br />
                        @if (!item.IsOccupied)
                        {
                            <span class="btn btn-success disabled">
                                [Max: @item.MaxCapacity <span class="glyphicon glyphicon-user"></span>]
                            </span>
                        }
                        else
                        {
                            <span class="btn btn-danger disabled">
                                [Max: @item.MaxCapacity <span class="glyphicon glyphicon-user"></span>]
                            </span>
                        }
                    </td>

                        counter++;

                        if (counter % numPerRow == 1)
                        {
                            @:</tr>
                        }
                    }
              
                </table>
</div>
</div>
