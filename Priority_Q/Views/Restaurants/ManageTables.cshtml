@model IEnumerable<Priority_Q.Models.Table>

@{
    ViewBag.Title = "Manage Tables";
}

@functions {

    private Boolean IsOwner()
    {
        return (Request.IsAuthenticated && ViewBag.OwnsRestaurant);
    }
}

<div class="modal fade" id="addTableModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @{
                Priority_Q.Models.Table newTable = new Priority_Q.Models.Table();
                newTable.RestaurantId = ViewBag.RestaurantId;
            }
            @Html.Partial("~/Views/Tables/_Create.cshtml", newTable);
        </div>
    </div>
</div>

<h2>@ViewBag.RestaurantName</h2>
<h3>Tables Available
    <span class="label label-default">
        @ViewBag.AvailableTables / @ViewBag.TotalTables
    </span>
    &nbsp;
    @if (IsOwner())
    {
        //create a new table just for that restaurant
        <button type="button" class="btn btn-info" data-toggle="modal" data-target="#addTableModal">
            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
        </button>
    }
</h3>

<!-- The data passed in is a list of tables for a restaurant -->
<table class="table table-striped table-hover ">
    <!-- contents -->
    @{
        var counter = 1;
        var numPerRow = (int)Math.Truncate(Math.Sqrt(Model.Count()));
    }
        <tr>
            @foreach (var item in Model)
            {
                if (counter % numPerRow == 1)
                {
                    @: <tr>
                }
                
                <td>
                    <span class="label label-default">#@counter</span> <br />
                    @if (!item.IsOccupied)
                    {
                        <span class="btn btn-success disabled">
                            [Max: @item.MaxCapacity <span class="glyphicon glyphicon-user"></span>]
                        </span>
                    }
                    else
                    {
                        <span class="btn btn-danger disabled">
                            [Max: @item.MaxCapacity <span class="glyphicon glyphicon-user"></span>]
                        </span>
                    }
                    @if (IsOwner())
                    {
                        //only logged in users should be able to edit and delete
                        <!-- Button trigger modal -->
                        var nameEditTableModal = "editTableModal" + item.ID;
                        var nameDeleteTableModal = "deleteTableModal" + item.ID;

                        <!-- Edit Table Modal -->
                        <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#@nameEditTableModal">
                            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                        </button>

                        <div class="modal fade" id="@nameEditTableModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    @Html.Partial("~/Views/Tables/_Edit.cshtml", item);
                                </div>
                            </div>
                        </div>

                        <!-- Delete table modal -->
                        <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#@nameDeleteTableModal">
                            <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                        </button>

                        <div class="modal fade" id="@nameDeleteTableModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    @Html.Partial("~/Views/Tables/_Delete.cshtml", item);
                                </div>
                            </div>
                        </div>
                    }
                </td>

        counter++;

        if (counter % numPerRow == 1)
        {
                    @:</tr>
        }   
   }
        </tr>

    </table>

