@using System.Globalization

@model List<IEnumerable<Priority_Q.Models.Reservation>>

@{
    ViewBag.Title = "View Reservations";
    var restaurant = ViewData["Restaurant"] as Priority_Q.Models.Restaurant;
    var allTables = ViewData["AllTables"] as IEnumerable<Priority_Q.Models.Table>;
}

<h2>
    View All Reservations
    <a class="btn btn-info" href='@string.Format("/Restaurants/ReserveTables/{0}", restaurant.ID)'>
        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
    </a>
</h2>

<p>
    @using (Html.BeginForm("ViewReservations", "Restaurants", FormMethod.Get))
    {
        <fieldset>
            Show Reservations For Only:  @Html.DropDownList("DaySlotList")
            <input class="btn btn-info" type="submit" value="Filter" />
            <a class="btn btn-warning" href='@string.Format("/Restaurants/ViewReservations/{0}", restaurant.ID)'>
                Show All
            </a>
        </fieldset>
    }
</p>

 <!-- The data passed in is a list of tables for a restaurant -->
<!-- List all empty tables -->
<table class="table table-striped table-hover ">
    <!-- contents -->
    @{
        var counter = 1;
        var numPerRow = (int)Math.Truncate(Math.Sqrt(allTables.Count()));
    }

        @foreach (var item in allTables)
        {
            if (counter % numPerRow == 1)
            {
                @:<tr>
            }

            <td>
                <!-- Table info (#, max capacity) -->
                <span class="label label-default">#@counter</span> <br />
                <span class="btn btn-info disabled" href='@string.Format("/Tables/ToggleOccupied/{0}", item.ID)'>
                    [Max: @item.MaxCapacity <span class="glyphicon glyphicon-user"></span>]
                </span>
                <br />

                <!-- Reservation Data-->
                <!-- don't display empty blocks -->
                <span class="btn btn-default">
                    @{
                        var availableReservations = 0;
                    }
                    @foreach (var reservation in Model[counter - 1])
                    {
                        if (ViewBag.DaySlot == "" 
                            || (ViewBag.DaySlot != "" && reservation.DaySlot.Equals(ViewBag.DaySlot)))
                        { 
                            var manageReservationModal = "manageReservationModal" + reservation.ID;
                            <button type="button" class="label label-warning" data-toggle="modal" data-target="#@manageReservationModal">
                                @{
                            DateTime currentTime = new DateTime().AddHours(reservation.HourSlot).AddMinutes(reservation.MinuteSlot);
                                }
                                @reservation.DaySlot - @currentTime.ToString("hh:mm tt", new CultureInfo("en-US")) ("@reservation.CustomerName")
                            </button>

                            <div class="modal fade" id="@manageReservationModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        @{
                            Priority_Q.Models.Reservation currentReservation = (new Priority_Q.Models.ReservationDBContext()).Reservations.Find(reservation.ID);
                                        }
                                        @Html.Partial("~/Views/Reservations/_Manage.cshtml", currentReservation);
                                    </div>
                                </div>
                            </div>

                            <br />
                            availableReservations++;
                        }
                    }
                
                    @if (availableReservations == 0)
                    {
                        <span>None</span>
                    }
                </span>

            </td>

                    counter++;

                    if (counter % numPerRow == 1)
                    {
                        @: </tr>
                    }
        }
    </table>







